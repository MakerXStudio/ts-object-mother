{"pageProps":{"markdown":"[@makerx/ts-object-mother](/code-docs.md) / data-builder\n\n\n\n## Table of contents\n\n### Classes\n\n- [DataBuilder](/classes/data_builder.DataBuilder.md)\n\n### Functions\n\n- [proxyBuilder](/modules/data_builder.md#proxybuilder)\n\n## Functions\n\n### proxyBuilder\n\n▸ **proxyBuilder**<`TDataBuilder`, `TData`\\>(`builder`): () => `DynamicDataBuilder`<`TDataBuilder`, `TData`\\>\n\nThe proxy builder allows one to easily create a builder and have a [proxy][https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/proxy/proxy](https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/proxy/proxy)\ninstance handle any with* methods not specifically declared by the builder itself.\n\n```typescript\nclass ShapeBuilder extends DataBuilder<Shape> {\n  constructor() {\n    super({\n      name: randomString(10, 20),\n      sides: randomNumberBetween(1, 4),\n      colour: randomElement(['Blue', 'Red', 'Yellow', 'Green']),\n    })\n  }\n\n  public withName(name: string) {\n    return this.with('name', name + ' Intercepted')\n  }\n}\n\nconst shapeBuilder = proxyBuilder<ShapeBuilder, Shape>(ShapeBuilder)\n\nconst shape = shapeBuilder().withName('Square').withSides(4).withColour('Red').build()\n\nconsole.log(shape) // Outputs { name: 'Square Intercepted', sides: 4, colour: 'Red' }\n```\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `TDataBuilder` | `TDataBuilder` |\n| `TData` | extends `object` |\n\n#### Parameters\n\n| Name | Type | Description |\n| :------ | :------ | :------ |\n| `builder` | () => `TDataBuilder` | The constructor to call to create a new instance of the builder. |\n\n#### Returns\n\n`fn`\n\n▸ (): `DynamicDataBuilder`<`TDataBuilder`, `TData`\\>\n\n##### Returns\n\n`DynamicDataBuilder`<`TDataBuilder`, `TData`\\>\n\n#### Defined in\n\n[data-builder.ts:96](https://github.com/MakerXStudio/ts-object-mother/blob/a5ac9a8/src/data-builder.ts#L96)\n","title":"# Module: data-builder","pages":[]},"__N_SSG":true}